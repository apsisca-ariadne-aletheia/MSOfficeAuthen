//Java, node JS is the prg language used.
const express = require('express');
const session = require('express-session');
const msal = require('@azure/msal-node');

const app = express();
const PORT = process.env.PORT || 3000;

const config = {
  auth: {
    clientId: 'Your-Application-ID',
    authority: 'https://login.microsoftonline.com/Your-Tenant-ID',
    clientSecret: 'Your-Client-Secret',
  },
  system: {
    loggerOptions: {
      loggerCallback(loglevel, message, containsPii) {
        console.log(message);
      },
      piiLoggingEnabled: false,
      logLevel: msal.LogLevel.Verbose,
    },
  },
};

const cca = new msal.ConfidentialClientApplication(config);

app.use(session({
  secret: 'Your-Session-Secret',
  resave: false,
  saveUninitialized: true,
}));

app.get('/login', (req, res) => {
  const authCodeUrlParameters = {
    scopes: ['openid', 'profile', 'offline_access'],
    redirectUri: 'http://localhost:3000/auth/callback',
  };

  cca.getAuthCodeUrl(authCodeUrlParameters).then((url) => {
    res.redirect(url);
  }).catch((error) => {
    console.log(error);
    res.status(500).send(error);
  });
});

app.get('/auth/callback', (req, res) => {
  const tokenRequest = {
    code: req.query.code,
    scopes: ['openid', 'profile', 'offline_access'],
    redirectUri: 'http://localhost:3000/auth/callback',
  };

  cca.acquireTokenByCode(tokenRequest).then((response) => {
    req.session.isAuthenticated = true;
    req.session.account = response.account;
    res.redirect('/');
  }).catch((error) => {
    console.log(error);
    res.status(500).send(error);
  });
});

app.get('/logout', (req, res) => {
  req.session.destroy();
  res.redirect('/');
});

app.get('/', (req, res) => {
  if (req.session.isAuthenticated) {
    res.send(`
      <h1>Hello ${req.session.account.username}</h1>
      <a href="/logout">Logout</a>
    `);
  } else {
    res.send(`
      <h1>Welcome Guest</h1>
      <a href="/login">Login with Microsoft</a>
    `);
  }
});

app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
